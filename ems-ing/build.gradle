buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}

}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//
	id 'java'

	id 'com.palantir.docker' version '0.22.1'
}
ext.projectName = "frame-api"
group = 'com.markcha'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	// json 파싱 도구
	implementation group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'
	// https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'

//    implementation 'org.json:json:20190722'   gra
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
	compile group: 'ch.simas.qlrm', name: 'qlrm', version: '1.7.1'
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation group: 'org.bgee.log4jdbc-log4j2', name:'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.1'
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'



	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'junit:junit:4.12'

	implementation('org.slf4j:jcl-over-slf4j')
	implementation('ch.qos.logback:logback-classic')
	implementation 'org.projectlombok:lombok'

	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.5.0'

}



test {
	useJUnitPlatform()
}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
	main.java.srcDir querydslDir
	println profile
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources-${profile}"
		}
	}
}
bootJar {
	archiveBaseName = "${projectName}-${project.version}-${profile}"
	archiveFileName = "${projectName}-${project.version}-${profile}.jar"
	delete fileTree('../bin') {
		include "${projectName}-${project.version}-${profile}.jar.jar"
	}
	copy {
		from "$buildDir/libs/${projectName}-${project.version}-${profile}.jar"
		into "../bin"
	}
}

// 리소스 디렉토리 추가
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

docker {
	name 'vetec/ems'
	tag 'Dockerhub', "vetec/ems:${project.version}"
	dockerfile file('Dockerfile')
	files tasks.bootJar.outputs.files
	buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
	labels(['key': 'value'])
	pull true
	noCache true
}
